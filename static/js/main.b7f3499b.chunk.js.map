{"version":3,"sources":["Post_description/styled.js","Post_description/index.js","actions/todoAction.js","reducers/userPostsData.js","Posts/inputs_styled.js","Posts/index.js","constants/todo_types.js","App.js","reducers/todo.js","reducers/postsInfo.js","reducers/index.js","index.js"],"names":["Container","styled","div","Avatar","img","Ava","MainData","NickName","h3","Header","Message","PostPhotoBlock","PostPhoto","MainContent","Ikons","Span","span","button","Post","props","name","photo","nickname","content","image","date","comments","retweets","likes","uploads","useState","countComments","setCountComments","countRetweet","setCountRetweet","countLikes","setCountLikes","src","onClick","class","addTodo","payload","dispatch","userPosts","Input","input","List","select","Background","Button","PostBlock","Posts","state","value","imageUrl","author","ava","posts","changeTextInput","e","setState","target","changeImageInput","onChangeAuthor","saveValueInput","type","text","toLocaleLowerCase","toString","replace","this","onChange","placeholder","defaultChecked","map","post","index","key","data","item","Date","getDate","parseInt","getMonth","getFullYear","Component","connect","console","log","addPost","App","className","todoReducer","action","userInfoReducer","combineReducers","availablePosts","postsInfoReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f3499b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    width: 900px;\r\n    height: 550px;\r\n    background-color: #15202B;\r\n    color: white;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    line-height: 1.2rem;\r\n    border-radius: 10px;\r\n    top: 25%;\r\n    left: 25%;\r\n    border-style: groove;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 100px; \r\n    border: 3px solid black;\r\n    box-shadow: 0 0 5px rgb(122, 122, 160); \r\n`;\r\n\r\nexport const Ava = styled.div`\r\n    display: flex;\r\n    margin: 3%;\r\n`;\r\n\r\nexport const MainData = styled.div`\r\n    display: flex;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n    line-height: 0;\r\n`;\r\nexport const NickName = styled.h3`\r\n    color: rgb(93, 93, 133);;\r\n    margin-left: 40px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    display: flex;\r\n    line-height: 0;\r\n    font-size: 1.3rem;\r\n`;\r\n\r\nexport const PostPhotoBlock = styled.div`\r\n    margin-top: 10px;\r\n    width: 95%;\r\n    height: 70%;\r\n`;\r\n\r\nexport const PostPhoto = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 30px;\r\n`;\r\nexport const MainContent = styled.div`\r\n    max-width: 80%;\r\n    height: 95%;\r\n    margin-top: -13px;\r\n`;\r\n\r\nexport const Ikons = styled.div`\r\n    margin-top: 15px;\r\n    margin-right: 35px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    margin-left: 5px;\r\n    color: rgb(167, 167, 201);\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 10px;\r\n`;","import React, { useState } from 'react';\r\n\r\nimport { Container, Avatar, MainContent, NickName, Ava, Header, MainData, Message, Span, PostPhoto, PostPhotoBlock, Ikons} from \"./styled.js\"\r\nimport './ikons.css';\r\n\r\n// to be continue..\r\nfunction Post(props){\r\n    const {name, photo, nickname, content, image, date, comments, retweets, likes, uploads} = props;\r\n    const [countComments, setCountComments] = useState(0);\r\n    const [countRetweet, setCountRetweet] = useState(0);\r\n    const [countLikes, setCountLikes] = useState(0);\r\n\r\n    return(\r\n        <Container>\r\n            <Ava>\r\n                <Avatar src= {photo} />\r\n            </Ava>\r\n            <MainContent>\r\n                <Header>\r\n                    <MainData>\r\n                        <h2>{name}</h2>\r\n                        <NickName>{nickname} {date}</NickName>\r\n                    </MainData>\r\n                    <Message>\r\n                      <p>{content}</p>\r\n                    </Message>\r\n                </Header>\r\n                <PostPhotoBlock>\r\n                     <PostPhoto src={image}/>\r\n                </PostPhotoBlock>\r\n                <Ikons>\r\n                    <i onClick={() => setCountComments(countComments >= 1 ? countComments-1 : countComments+1)} \r\n                       class=\"fa fa-comment\"\r\n                    >  <Span>{comments + countComments}</Span>\r\n                    </i>\r\n                      \r\n                    <i onClick={() => setCountRetweet(countRetweet >= 1 ? countRetweet-1 : countRetweet+1 )} \r\n                       class=\"fa fa-retweet\"\r\n                    >  <Span >{retweets + countRetweet}</Span>\r\n                    </i>\r\n\r\n                    <i onClick={() => setCountLikes(countLikes >= 1 ? countLikes-1 : countLikes+1)} \r\n                       class=\"fas fa-heart\"\r\n                    >  <Span>{likes + countLikes}</Span>\r\n                    </i>\r\n\r\n                    <i class=\"fas fa-upload\"><Span>{uploads}</Span></i>\r\n                </Ikons>\r\n            </MainContent>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n//dtcfghjn","\r\nexport const addTodo = (payload) => (dispatch)=>{\r\n    dispatch(payload);\r\n}","export const userPosts= [\r\n      {\r\n        name:'Anakin Skywalker',\r\n        photo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n        nickname: \"@dart_vader\",\r\n        content:\"WTF? Who is Ray? Why she is Skywalker1? Luke...?\",\r\n        date:\"28 февр.\",\r\n        image:'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n        comments: 400,\r\n        retweets: 85,\r\n        likes: 1200\r\n      },\r\n      {\r\n        name:'Baks Bunny',\r\n        photo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n        nickname: \"@dart_vader2\",\r\n        content:\"WTF? Who is Ray? Why she is Skywalker2? Luke...?\",\r\n        date:\"28 февр.\",\r\n        image:'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n        comments: 430,\r\n        retweets: 185,\r\n        likes: 1400\r\n      },\r\n      {\r\n        name:'Lionel Messi',\r\n        photo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n        nickname: \"@dart_vader3\",\r\n        content:\"WTF? Who is Ray? Why she is Skywalker3? Luke...?\",\r\n        date:\"28 февр.\",\r\n        image:'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n        comments: 450,\r\n        retweets: 80,\r\n        likes: 2340\r\n      },\r\n    ]\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    width: 250px;\r\n    height: 30px;\r\n    padding: 2px 3px 2px 7px;\r\n    margin-bottom: 15px;\r\n    border: 2px solid rgb(85, 85, 151);\r\n    color: white;\r\n    border-radius:3px;\r\n    background: #15202B;;\r\n    border-radius: 5px;\r\n    opacity: 0.7;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const List = styled.select`\r\n    margin-bottom: 25px;\r\n    border: 2px solid rgb(85, 85, 151);\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nexport const Background = styled.div`\r\n     background-color: rgb(179, 179, 196);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    color: white;\r\n    background-color: rgb(85, 85, 151);\r\n    margin-bottom: 50px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PostBlock = styled.div`\r\n    margin-bottom: 50px;\r\n`;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ADD_ITEM_TODO} from '../constants/todo_types';\r\nimport Post from '../Post_description';\r\nimport { addTodo } from '../actions/todoAction';\r\nimport { userPosts } from '../reducers/userPostsData';\r\nimport { Input, List, Background, Button, PostBlock } from './inputs_styled.js';\r\n\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    value: '',\r\n    imageUrl: '',\r\n    author: '',\r\n    ava: '',\r\n    posts: userPosts\r\n  }\r\n\r\n\r\n  changeTextInput = (e) => {\r\n    this.setState({ \r\n      value: e.target.value \r\n    })\r\n  }\r\n\r\n  changeImageInput = (e) => {\r\n    this.setState({ \r\n      imageUrl: e.target.value \r\n    })\r\n}\r\n\r\n  onChangeAuthor=(e)=>{\r\n    this.setState({ author: e.target.value })\r\n  }\r\n\r\n  saveValueInput = () => {\r\n\r\n    this.props.dispatch(addTodo({\r\n      type: ADD_ITEM_TODO,\r\n      text: this.state.value,\r\n      image: this.state.imageUrl,\r\n      name: this.state.author,\r\n      nickname: \"@\" + this.state.author.toLocaleLowerCase().toString().replace(/\\s/g, ''),\r\n      photo: this.state.author === 'Harry Poter'? (this.state.ava = 'https://api.time.com/wp-content/uploads/2014/07/301386_full1.jpg?w=600&quality=85') : \r\n        this.state.author === 'John Cena'? (this.state.ava = 'https://sun6-16.userapi.com/c846020/v846020635/71579/UKw0hOXcuFs.jpg?ava=1') : \r\n        this.state.author === 'Thomas Shelby'? (this.state.ava = 'https://sun9-18.userapi.com/c854324/v854324158/163df5/Y52VCm9baHc.jpg?ava=1') : \"\"\r\n  }));\r\n\r\n    this.setState({\r\n      value: '',\r\n      imageUrl: ''\r\n    }) \r\n  }\r\n\r\n  render () {\r\n    const posts = this.state.posts;\r\n    \r\n    return (\r\n      <Background>\r\n        <center>\r\n        <Input\r\n          type='text'\r\n          onChange={this.changeTextInput} \r\n          value={this.state.value}\r\n          placeholder='Post`s text'\r\n        />\r\n        <Input\r\n          onChange={this.changeImageInput}\r\n          value={this.state.imageUrl}\r\n          type='text' \r\n          placeholder='Image url'\r\n        />\r\n        <List onChange={this.onChangeAuthor}>\r\n              <option defaultChecked>--Choose--</option>\r\n              <option value=\"Harry Poter\"> Harry Poter </option>\r\n              <option value=\"John Cena\"> John Cena </option>\r\n              <option value=\"Thomas Shelby\"> Thomas Shelby </option>\r\n        </List> \r\n\r\n        <Button onClick={this.saveValueInput}>Add</Button>\r\n\r\n        {\r\n          posts.map((post, index)=>(\r\n          <PostBlock>\r\n            <Post\r\n              key={post+index}\r\n              name = {post.name}\r\n              photo = {post.photo}\r\n              nickname = {post.nickname}\r\n              content={post.content}\r\n              image={post.image}\r\n              date={post.date}\r\n              comments = {post.comments}\r\n              retweets =  {post.retweets}\r\n              likes = {post.likes}\r\n            />\r\n          </PostBlock>\r\n          )) \r\n        }\r\n\r\n        <PostBlock>\r\n        {\r\n          this.props.data.map((item, index) => (\r\n          <Post\r\n            key={item+index}\r\n            name = {item.name}\r\n            photo = {item.photo}\r\n            nickname = {item.nickname}\r\n            content={item.text}\r\n            image={item.image}\r\n            date={\" · \" + new Date().getDate() + \".0\" + parseInt(new Date().getMonth() + 1) \r\n              +  \".\" + new Date().getFullYear()}\r\n            comments = {400}\r\n            retweets =  {120}\r\n            likes = {1200} \r\n          />\r\n          )) \r\n        }\r\n        </PostBlock>\r\n        </center>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    console.log(state)\r\n    return { \r\n      data: state.addPost,\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Posts);","export const ADD_ITEM_TODO = 'ADD_ITEM_TODO';\r\nexport const ADD_POST_INFO = 'ADD_POST_INFO';\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Posts from './Posts'\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <Posts/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import { ADD_ITEM_TODO } from '../constants/todo_types';\r\n\r\nconst todoReducer = (state=[], action)=>{\r\n    switch(action.type) {\r\n        case ADD_ITEM_TODO:\r\n            return[\r\n                ...state,\r\n                {\r\n                    \r\n                    text: action.text,\r\n                    image: action.image,\r\n                    name: action.name,\r\n                    nickname: action.nickname,\r\n                    photo: action.photo\r\n                    \r\n                }\r\n            ]\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n export default todoReducer;","import { ADD_POST_INFO } from '../constants/todo_types';\r\nimport { userPosts } from './userPostsData'\r\n\r\nconst userInfoReducer = (state=userPosts, action)=>{\r\n    switch(action.type) {\r\n        case ADD_POST_INFO:\r\n          return{\r\n              ...state,\r\n              posts: [...state.posts]   \r\n            }     \r\n        default:\r\n            return state    \r\n    }\r\n}\r\n export default userInfoReducer;","import { combineReducers } from 'redux'\r\nimport todoReducer from './todo';\r\nimport postsInfoReducer from './postsInfo'\r\n\r\n\r\nexport default combineReducers({\r\n    addPost: todoReducer,\r\n    availablePosts: postsInfoReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...[thunk]))\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}